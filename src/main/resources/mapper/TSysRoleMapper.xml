<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.manage.dao.TSysRoleMapper">
  
  <resultMap id="BaseResultMap" type="com.project.manage.entity.TSysRole">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="available" jdbcType="VARCHAR" property="available" />
  </resultMap>
  
  <sql id="Base_Column_List">
    role_id, description, role, available
  </sql>
  
  <select id="findAll" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_role
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_sys_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.project.manage.entity.TSysRole">
    insert into t_sys_role (role_id, description, role, 
      available)
    values (#{roleId,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 
      #{available,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.project.manage.entity.TSysRole">
    insert into t_sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.project.manage.entity.TSysRole">
    update t_sys_role
    <set>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.project.manage.entity.TSysRole">
    update t_sys_role
    set description = #{description,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      available = #{available,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  
  <select id="findRoleNameByUserId" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_sys_role where role_id in 
    	(select role_id from t_sys_user_role_ref where user_id = #{userId,jdbcType=INTEGER})
  </select>
  
</mapper>